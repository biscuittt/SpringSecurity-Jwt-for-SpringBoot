server:
  port: 8080

spring:
  application:
    name: nbx_appStore
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/nbx?serverTimezone=UTC&userUnicode=true&useSSL=false&characterEncoding=utf8
    username: root
    password: cc20030110.
    hikari:
      #最小空闲连接数
      minimum-idle: 10
      # 空闲连接存活最大时间，默认600000（10分钟）
      idle-timeout: 60000
      # 连接池最大连接数，默认是 10
      maximum-pool-size: 10
      # 此属性控制从池返回的连接的默认自动提交行为,默认值：true
      auto-commit: true
      # 此属性控制池中连接的最长生命周期，值0表示无限生命周期，默认1800000即30分钟
      max-lifetime: 1800000
      # 数据库连接超时时间,默认30秒，即30000
      connection-timeout: 30000
      connection-test-query: SELECT 1
  redis:
    host: 101.34.80.114
    port: 6379
    timeout: 60s
    lettuce:
      pool:
        max-active: 20
        max-idle: 16
        min-idle: 0
        max-wait: 5s
        time-between-eviction-runs: 1s
  rabbitmq:
    host: 101.34.80.114
    port: 5672 # 端口
    virtual-host: / # 虚拟主机
    username: root # 用户名
    password: 123456 # 密码
    publisher-confirm-type: correlated # correlated 异步回调，定义 ConfirmCallback，MQ返回结果时会回调这个 ConfirmCallback
    publisher-returns: false   # 开启 publish-return功能，同样是基于callback机制，需要定义ReturnCallback
    template:
      mandatory: false   # 定义消息路由失败时的策略。true，则调用 ReturnCallback；false：则直接丢弃消息
    listener:
      simple:
        prefetch: 1   # 每次只能获取一条消息，处理完成才能获取下一个消息
        acknowledge-mode: none   # auto:出现异常时返回 unack，消息回滚到 mq；没有异常，返回 ack ,manual:手动控制,none:丢弃消息，不回滚到 mq
        retry:
          enabled: true #开启消费者失败重试
          initial-interval: 1000ms #初识的失败等待时长为1秒
          multiplier: 1 #失败的等待时长倍数，下次等待时长 = multiplier * last-interval
          max-attempts: 3 #最大重试次数
          stateless: true #true无状态；false有状态。如果业务中包含事务，这里改为false
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher

mybatis-plus:
  configuration.log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

swagger:
  enable: true

nbx:
  jwt:
    header: Authorization
    expire: 2592000 # 30天，s为单位
    secret: abcdefgabcdefgabcdefgabcdefg
